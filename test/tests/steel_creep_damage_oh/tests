[Tests]
  issues = '#231'
  design = 'SteelCreepDamageOh.md'
  [steel_creep_damage]
    type = 'Exodiff'
    input = 'steel_creep_damage.i'
    exodiff = 'steel_creep_damage_out.e'
    valgrind = none
    heavy = true
    requirement = 'Blackbear shall compute steel creep damage considering stress triaxiality as per '
                  'Oh et al (2011) and apply it to reduce the finite element stress of a simple '
                  'problem to simulate creep failure.'
  []
  [ad_steel_creep_damage]
    type = 'Exodiff'
    input = 'ad_steel_creep_damage.i'
    exodiff = 'ad_steel_creep_damage_out.e'
    valgrind = none
    heavy = true
    requirement = 'Blackbear shall compute steel creep damage considering stress triaxiality as per '
                  'Oh et al (2011) and apply it to reduce the finite element stress of a simple '
                  'problem to simulate creep failure when using automatic differentiation.'
  []
  [ad_steel_creep_damage_2d]
    type = 'Exodiff'
    input = 'ad_steel_creep_damage_2d.i'
    exodiff = 'ad_steel_creep_damage_2d_out.e'
    requirement = 'Blackbear shall compute steel creep damage considering per Oh et al (2011) and '
                  'apply it to reduce the finite element stress of a simple two-dimensional problem '
                  'to simulate creep failure when using automatic differentiation.'
  []
  [steel_creep_damage_2d]
    type = 'Exodiff'
    input = 'steel_creep_damage_2d.i'
    exodiff = 'steel_creep_damage_2d_out.e'
    requirement = 'Blackbear shall compute steel creep damage considering per Oh et al (2011) and '
                  'apply it to reduce the finite element stress of a simple two-dimensional problem '
                  'to simulate creep failure when using hand-coded Jacobians.'
  []
[]
